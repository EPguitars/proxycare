version: '3.8'

services:
  # FastAPI application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - proxy-network
    extra_hosts:
      - "localhost:host-gateway"

  # Celery worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A scheduler.celery_worker worker -l info -c 50 -P eventlet
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - proxy-network
    extra_hosts:
      - "localhost:host-gateway"

  # PostgreSQL database
  postgres:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql_schema_postgres.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./init_test_data.sql:/docker-entrypoint-initdb.d/2-test-data.sql
    environment:
      - POSTGRES_USER=${user}
      - POSTGRES_PASSWORD=${password}
      - POSTGRES_DB=${dbname}
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - proxy-network

  # Redis for Celery broker
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - proxy-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadmin123"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - proxy-network

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  proxy-network:
    driver: bridge 